{"data":{"site":{"siteMetadata":{"author":{"name":"Henry Wu","contacts":{"twitter":"#"}},"disqusShortname":"","subtitle":"Coding and stuff.","title":"Dev Notes","url":"https://lumen.netlify.com"}},"markdownRemark":{"id":"6bd0bb9f-a76e-55bd-9051-cb62d5b84f1e","html":"<p>I’m writing these instructions after installing Ubuntu 18.04.02 LTS on an older desktop. So it should apply to any fresh install of Ubuntu 18.04.</p>\n<p>Note that anything with <code class=\"language-text\">$</code> in front of it means execute the command in your Terminal application.</p>\n<p>My output of <code class=\"language-text\">$ lsb_release -a</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">No LSB modules are available.\nDistributor ID:\tUbuntu\nDescription:\tUbuntu 18.04.2 LTS\nRelease:\t18.04\nCodename:\tbionic</code></pre></div>\n<h2 id=\"install-git\"><a href=\"#install-git\" aria-label=\"install git permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Install git</h2>\n<p><code class=\"language-text\">$ sudo apt install git</code></p>\n<p>You should be able to run: <code class=\"language-text\">$ git --version</code></p>\n<p>And have your git version appear if the installation is successful.</p>\n<h2 id=\"clone-the-zig-repository\"><a href=\"#clone-the-zig-repository\" aria-label=\"clone the zig repository permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Clone the Zig repository</h2>\n<p>Go to <a href=\"https://github.com/ziglang/zig\">https://github.com/ziglang/zig</a> in your web browser and click on the <code class=\"language-text\">Clone or download</code> button. Copy the URL to your clipboard and back at your terminal:\n<code class=\"language-text\">$ git clone https://github.com/ziglang/zig.git</code></p>\n<h2 id=\"install-llvm-and-related-dependencies\"><a href=\"#install-llvm-and-related-dependencies\" aria-label=\"install llvm and related dependencies permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Install LLVM and related dependencies</h2>\n<p>This section basically goes over the instructions from here: <a href=\"https://linuxhint.com/install-llvm-ubuntu/\">https://linuxhint.com/install-llvm-ubuntu/</a></p>\n<p>⚠️ Note that the LLVM version will change as Zig and LLVM update. The version Zig targets as I write this is LLVM 8. In the future when LLVM 9 is out that will be the version that Zig eventually targets.</p>\n<p>Go to <a href=\"https://apt.llvm.org/\">https://apt.llvm.org/</a> in your web browser and find the links for Ubuntu 18.04 for LLVM 8.</p>\n<p>Copy the one beginning with <code class=\"language-text\">deb</code> not <code class=\"language-text\">deb-src</code> onto your clipboard.</p>\n<p>On your machine open the Application Menu and search for <code class=\"language-text\">update</code> to find and open the <code class=\"language-text\">Software &amp; Updates</code> program. Once the application opens click on the <code class=\"language-text\">Other Software</code> tab and click on the <code class=\"language-text\">Add</code> button. </p>\n<p>Paste the link into the APT line. Then click on the <code class=\"language-text\">Add Source +</code> button. Enter your password and click the <code class=\"language-text\">Authenticate</code> button. </p>\n<p>Now open a Terminal session (Ctrl + Alt + T on Ubuntu) and run this command to retreive the archive signature:\n<code class=\"language-text\">$ wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add -</code></p>\n<p>Once the archive signature retrieval finishes we can update the package repository with this command:\n<code class=\"language-text\">$ sudo apt-get update</code></p>\n<p>Output should look something like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Get:1 http://apt.llvm.org/bionic llvm-toolchain-bionic-8 InRelease [4,231 B]\nGet:2 http://apt.llvm.org/bionic llvm-toolchain-bionic-8/main amd64 Packages [8,136 B]\nHit:3 http://us.archive.ubuntu.com/ubuntu bionic InRelease                     \nGet:4 http://apt.llvm.org/bionic llvm-toolchain-bionic-8/main i386 Packages [1,573 B]\nGet:5 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]    \nGet:6 http://us.archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]   \nHit:7 http://us.archive.ubuntu.com/ubuntu bionic-backports InRelease           \nFetched 191 kB in 1s (151 kB/s)                                                \nReading package lists... Done</code></pre></div>\n<p>Now we can install LLVM and other tools from <a href=\"https://apt.llvm.org/\">https://apt.llvm.org/</a> with the package manager. I recommend everything under <code class=\"language-text\">#LLVM</code>, <code class=\"language-text\"># Clang and co</code>, <code class=\"language-text\"># lldb</code>, and <code class=\"language-text\"># lld (linker)</code>. Not sure that you need the last two, but I installed <code class=\"language-text\">lldb</code> since it’s nice for debugging. LLVM and Clang are definitely required though. Run the following commands to install:</p>\n<ul>\n<li>\n<p>LLVM</p>\n<ul>\n<li><code class=\"language-text\">$ sudo apt-get install libllvm-8-ocaml-dev libllvm8 llvm-8 llvm-8-dev llvm-8-doc llvm-8-examples llvm-8-runtime</code></li>\n</ul>\n</li>\n<li>\n<p>Clang and co</p>\n<ul>\n<li><code class=\"language-text\">$ sudo apt-get install clang-8 clang-tools-8 clang-8-doc libclang-common-8-dev libclang-8-dev libclang1-8 clang-format-8 python-clang-8</code></li>\n</ul>\n</li>\n<li>\n<p>lldb</p>\n<ul>\n<li><code class=\"language-text\">$ sudo apt-get install lldb-8</code></li>\n</ul>\n</li>\n<li>\n<p>lld (linker)</p>\n<ul>\n<li><code class=\"language-text\">$ sudo apt-get install lld-8</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"install-cmake-and-build-essential\"><a href=\"#install-cmake-and-build-essential\" aria-label=\"install cmake and build essential permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Install cmake and build-essential</h2>\n<p><code class=\"language-text\">$ sudo apt install cmake</code></p>\n<p>If you try to build Zig at this point you’ll run into this error:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ cmake ..\n-- The C compiler identification is GNU 7.4.0\n-- The CXX compiler identification is unknown\n-- Check for working C compiler: /usr/bin/cc\n-- Check for working C compiler: /usr/bin/cc -- works\n-- Detecting C compiler ABI info\n-- Detecting C compiler ABI info - done\n-- Detecting C compile features\n-- Detecting C compile features - done\nCMake Error at CMakeLists.txt:13 (project):\n  No CMAKE_CXX_COMPILER could be found.\n\n  Tell CMake where to find the compiler by setting either the environment\n  variable &quot;CXX&quot; or the CMake cache entry CMAKE_CXX_COMPILER to the full path\n  to the compiler, or to the compiler name if it is in the PATH.\n\n\n-- Configuring incomplete, errors occurred!\nSee also &quot;/home/me/Documents/dev/ziglang/zig/build/CMakeFiles/CMakeOutput.log&quot;.\nSee also &quot;/home/me/Documents/dev/ziglang/zig/build/CMakeFiles/CMakeError.log&quot;.</code></pre></div>\n<p>I tried setting <code class=\"language-text\">CC</code> and <code class=\"language-text\">CXX</code> to  <code class=\"language-text\">/usr/bin/clang-8</code> for the C and C++ compiler and the <code class=\"language-text\">cmake</code> command succeeds, but <code class=\"language-text\">make install</code> will fail with various libraries not linked or conflicts on types. In any case this resolves the issue:\n<code class=\"language-text\">$ sudo apt-get install build-essential</code></p>\n<p>Once I ran the above Zig is built with <code class=\"language-text\">/usr/bin/c++</code> for the C++ compiler (the GNU C++ compiler) and <code class=\"language-text\">/usr/bin/cc</code> for the C compiler. I don’t think the GNU C++ compiler is used to build LLVM, but I’m not sure how to determine which compiler was used when getting LLVM from a package manager and the GNU C/C++ compilers are used in Zig’s CI script for Linux.</p>\n<h2 id=\"build-zig\"><a href=\"#build-zig\" aria-label=\"build zig permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Build Zig</h2>\n<p>Now we should be ready to build Zig. Go to your directory with Zig and follow the <a href=\"https://github.com/ziglang/zig#posix-1\">instructions from the Zig README</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mkdir build\ncd build\ncmake ..\nmake install</code></pre></div>\n<p>The build (depending on your machine) should take a little while. On my old machine with a fresh install of Ubuntu took about 15-20 minutes.</p>\n<h2 id=\"extras\"><a href=\"#extras\" aria-label=\"extras permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Extras</h2>\n<h3 id=\"alias-your-zig-build\"><a href=\"#alias-your-zig-build\" aria-label=\"alias your zig build permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Alias Your Zig Build</h3>\n<p>Open up your bash profile in a text editor. For Ubuntu if you haven’t created any additional profile files, there should be:</p>\n<ul>\n<li><code class=\"language-text\">~/.profile</code></li>\n<li><code class=\"language-text\">~/.bashrc</code></li>\n</ul>\n<p>I used <code class=\"language-text\">~/.bashrc</code> and added the following in it at the bottom of the file:</p>\n<p><code class=\"language-text\">alias zig=&#39;/home/me/Documents/dev/ziglang/zig/build/zig&#39;</code></p>\n<p>Then in my Terminal session I did: <code class=\"language-text\">$ source ~/.bashrc</code></p>\n<p>After that try running: <code class=\"language-text\">$ zig zen</code>, which should give you this output:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"> * Communicate intent precisely.\n * Edge cases matter.\n * Favor reading code over writing code.\n * Only one obvious way to do things.\n * Runtime crashes are better than bugs.\n * Compile errors are better than runtime crashes.\n * Incremental improvements.\n * Avoid local maximums.\n * Reduce the amount one must remember.\n * Minimize energy spent on coding style.\n * Together we serve end users.</code></pre></div>\n<p>If it does then it’s working as expected and you don’t need to specify your full file path to the <code class=\"language-text\">zig</code> executable anymore to build your files.</p>\n<h3 id=\"hello-zig\"><a href=\"#hello-zig\" aria-label=\"hello zig permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Hello Zig!</h3>\n<p>Try running the sample hello world program that Zig comes with as an example. See the file here: <a href=\"https://github.com/ziglang/zig/blob/master/example/hello_world/hello.zig\">https://github.com/ziglang/zig/blob/master/example/hello_world/hello.zig</a></p>\n<div class=\"gatsby-highlight\" data-language=\"zig\"><pre class=\"language-zig\"><code class=\"language-zig\">const std = @import(&quot;std&quot;);\n\npub fn main() !void {\n    // If this program is run without stdout attached, exit with an error.\n    const stdout_file = try std.io.getStdOut();\n    // If this program encounters pipe failure when printing to stdout, exit\n    // with an error.\n    try stdout_file.write(&quot;Hello, world!\\n&quot;);\n}</code></pre></div>\n<p>You can do so by creating a new file with that Zig code and naming it something like <code class=\"language-text\">hello_zig.zig</code>. Go to the file in your Terminal session and run it with:\n<code class=\"language-text\">$ zig run hello_zig.zig</code></p>\n<p>If everything is working you should get this output at the Terminal window:\n<code class=\"language-text\">Hello, world!</code></p>","fields":{"tagSlugs":["/tag/zig/","/tag/ziglang/","/tag/linux/","/tag/ubuntu/"]},"frontmatter":{"date":"2019-06-02T19:19:43.607Z","description":"Building Zig from source on Ubuntu 18.04 LTS.","tags":["Zig","ziglang","Linux","Ubuntu"],"title":"Building Zig on Ubuntu 18.04 LTS"}}},"pageContext":{"slug":"/posts/building-zig-on-ubuntu-1804/"}}